<mh>
:M AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
Message-Id: <.2003527125.72428800.156994365.163875535>
Subject: Cプログラム

areaw(use=1;rgb="0xDCCD98";atr=0): /* */
rear(use=1;rgb="0xDCCD98";atr=0): //
area(use=1;rgb="0xEEA68A";atr=0;flag=2): " " \"
area(use=1;rgb="0xEEA68A";atr=0): ' ' \'
//rear(rgb="0x008040";re=1): ^D
words(use=1;rgb="0xBDE8B9";atr=0): if else elif endif
rear(use=1;rgb="0xBBBDD2";atr=0): #
reword(use=1;rgb="0xEEA68A";atr=0;re=1): 0x[0-9a-fA-F]+
reword(use=1;rgb="0xEEA68A";atr=0;re=2): <(\d+)>
words(use=1;rgb="0xBDE8B9";atr=0): asm auto break case char continue default do double enum extern float for goto int long register return short sizeof static struct switch typedef union unsigned void while class const delete friend inline new operator overload private protected public this virtual signed volatile namespace using try catch
words(use=1;rgb="0xBDE8B9";atr=0): mchar txstr permanent wchar tchar TEXTCHAR textvar
chars(rgb="0xFF0000";atr=2): \(kata)
<mh>
:M AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
Message-Id: <.2003723348.158982401.1536296.1911473>
Subject: Java

areaw(use=1;rgb="0x008040";atr=0): /* */
rear(use=1;rgb="0x008040";atr=0): //
area(use=1;rgb="0x800000";atr=0;flag=2): " " \"
area(use=1;rgb="0x800000";atr=0): ' ' \'
//rear(rgb="0x008040";re=1): ^D
words(use=1;rgb="0x008000";atr=0): if else elif endif
rear(rgb="0x008080"): #
reword(use=1;rgb="0x930049";atr=0;re=1): 0x[0-9a-fA-F]+
reword(use=1;rgb="0x930049";atr=0;re=2): <(\d+)>
words(use=1;rgb="0x008000";atr=0): asm auto break case char continue default do double enum extern float for goto int long register return short sizeof static struct switch typedef union unsigned void while class const delete friend inline new operator overload private protected public this virtual signed volatile
words(use=1;rgb="0x008000";atr=0): mchar txstr permanent wchar tchar TEXTCHAR textvar
words(use=1;rgb="0x008000";atr=0): import package boolean null implements super abstract final try catch finally true false interface extends synchronized throws throw
chars(use=1;rgb="0xFF0000";atr=2): \(kata)
<mh>
:M AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
Message-Id: <.2003605434.311303168.73570969.76323049>
Subject: メッセージ

rear(use=1;rgb="0x008040";atr=0;re=1): ^\s*\>
rear(use=1;rgb="0x008040";atr=0;re=1): ^\s*＞
rear(use=1;rgb="0x008040";atr=0;re=1): ^\s*\|
rear(use=1;rgb="0x008000";atr=0;re=1): ^\s*｜
rear(use=1;rgb="0x008040";atr=0;re=1): ^\s*#
rear(use=1;rgb="0x008040";atr=0;re=1): ^\s*＃
<mh>
:M AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
Message-Id: <.2007706752.610701828.10228000.12315867>
Subject: Ruby

words(use=1;rgb="0xBCE8B9";atr=0): BEGIN END alias and begin break case class def defined do else elsif end ensure false for if in module next nil not or redo rescue retry return self super then true undef unless until when while yield protected private public require
rear(use=1;rgb="0xDCCD98";atr=0): #
areaw(use=1;rgb="0xDCCD98";atr=0): =begin =end
area(use=1;rgb="0xEEA68A";atr=0): " " \"
area(use=1;rgb="0xEEA68A";atr=0): ' ' \'
reword(use=1;rgb="0xEEA68A";atr=0;re=1): 0x[0-9a-fA-F]+
reword(use=1;rgb="0xEEA68A";atr=0;re=2): <(\d+)>
